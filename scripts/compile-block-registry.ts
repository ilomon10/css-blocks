import * as React from "react";
import { Block, getBlockList } from "@/lib/registry";
import * as fs from "fs";
import * as path from "path";
import prettier from "prettier";

async function compileBlockRegistry() {
  const blockList = await getBlockList();

  const blockEntries = Object.entries(blockList)
    .map(([key, block]) => {
      return `"${key}": {
        "categories": "${block.categories}",
        "section": "${block.section}",
        "title": "${block.title}",
        "description": "${block.description}",
        "name": "${block.name}",
        "component": React.lazy(() => import("@/${block.file.path}")),
        "file": {
          "path": "${block.file.path}",
          "type": "${block.file.type}",
          "target": "${block.file.target}"
        },
        "meta": ${JSON.stringify(block.meta, null, 2)}
      }`;
    })
    .join(",\n");

  const content = `// @ts-nocheck\n// This file is autogenerated by scripts/compile-block-registry.ts\n// Do not edit this file directly.\n\nimport * as React from "react";\n\nexport const Index: Record<string, any> = {\n${blockEntries}\n};`;

  const formattedContent = await prettier.format(content, {
    parser: "typescript",
  });
  fs.writeFileSync(path.resolve("blocks", "index.ts"), formattedContent);
}

compileBlockRegistry();
